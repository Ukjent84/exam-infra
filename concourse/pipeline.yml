jobs:
# Replace params / app_name with your heroku app name
- name: deploy-app
  plan:
  - aggregate:
    - get: exam-app
    - get: exam-infra
  - task: mvn_build
    file: exam-infra/concourse/java/task.yml
    input_mapping: {source: exam-app}

  - task: push_to_heroku
    file: exam-infra/concourse/heroku/push_master_to_heroku.yml
    input_mapping: {source: exam-app}
    params:
      app_name: ((heroku_app_name))
      heroku_email: ((heroku_email))
      heroku_api_token: ((heroku_api_key))


- name: infra
  plan:
  - aggregate:
    - get: exam-infra
  - task: apply
    file: exam-infra/concourse/terraform/task.yml
    input_mapping: {source: exam-infra}
    params:
      github_token: ((github_token))
      heroku_api_key: ((heroku_api_key))
      statuscake_api_key: ((statuscake_api_key))
      command: apply
      directories: |
          terraform
  - put: exam-infra
    params:
      repository: with-state
      rebase: true

#put to resource container registry
- name: build
  plan:
  - aggregate:
    - get: exam-app
      trigger: true
    - get: exam-infra
  - task: mvn_build
    file: exam-infra/concourse/java/task.yml #mvn_build task.yml
    input_mapping: {source: exam-app}
  - put: docker-image-app
    params:
      build: exam-app

#deploy images that has passedd
- name: deploy-ci
  plan:
  - aggregate:
    - get: exam-infra
    - get: docker-image-app
      trigger: true
      passed: [build]

resources:

# Replace with your own repository
- name: exam-app
  type: git
  source:
      uri:  git@github.com:Ukjent84/exam-app.git
      branch: master
      private_key: ((deploy_key_app))

# Replace with your own repository
- name: exam-infra
  type: git
  source:
      uri: git@github.com:Ukjent84/exam-infra.git
      branch: master
      private_key: ((deploy_key_infra))

# Heroku container registry
- name: docker-image-app
  type: docker-image
  source:
    repository: registry.heroku.com/((heroku_app_name))/web
    username: ((heroku_email))
    password: ((heroku_api_key))
